# Original:  zinc-GRIT-2000.yaml
out_dir: results
metric_best: mae
metric_agg: argmin
tensorboard_each_run: False  # Log to Tensorboard each run
#accelerator: "cuda:3"
#device: "cuda:3"
accelerator: "cuda:0"
mlflow:
  use: False
  project: molhiv
  name: molhiv
wandb:
  use: False
  project: molhiv
dataset:
  format: OGB
  name: custom-ogbg-molhiv
  task: graph
  task_type: classification
  transductive: False
  node_encoder: True
  node_encoder_name: Atom+LapPe #Atom+RWSE or Atom+LapPe etc
  node_encoder_num_types: 9  # for remove_h #FIND OUT THIS
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: Bond #BOND
  edge_encoder_num_types: 3  # actually do not have aromatic bonds #FIND OUT THIS
  edge_encoder_bn: False
  add_virtual_node_edge: False 
  subgraph: False
  remove_h: True
train:
  mode: pretrain_encoder
  batch_size: 128
  eval_period: 1
  enable_ckpt: True  # Checkpointing can now be disabled to save I/O when e.g. just benchmarking.
  ckpt_best: False  # WARNING: Checkpoint every epoch a better model is found may increase I/O significantly.
  ckpt_clean: False # Delete old ckpt each time.
  ckpt_period: 10
  ensemble_repeat: 1
  ensemble_mode: none
  pretrain:
    mask_node_prob: 0.0
    mask_edge_prob: 0.0
    mask_label_prob: 0.0
    recon: all
    original_task: False
    input_target: False
    node_factor: 1.0
    edge_factor: 1.0
    graph_factor: 0.0 #WHAT IS THIS
model:
  type: GraphTransformerStructureEncoder
  loss_fun: l1
  edge_decoding: dot
  graph_pooling: add
posenc_RRWP:
  enable: True
  ksteps: 16
encoder:
  model_type: GraphTransformerStructureEncoder
  in_dim: 48 #FIGURE THIS OUT
  prefix_dim: 96 #FIGURE THIS OUT
  posenc_in_dim: 16
  posenc_in_dim_edge: 16
  posenc_dim: 48
  pe_raw_norm: None
  hid_dim: 96
  out_dim: 32
  use_time: False
  temb_dim: 0
  num_heads: 4
  num_layers: 5
  dropout: 0.2
  attn_dropout: 0.5
  attn:
    clamp: 5.
    act: 'relu'
    full_attn: True
    edge_enhance: True
    O_e: True
    norm_e: True
    fwl: False
    signed_sqrt: True
    score_act: True
    deg_scaler: False
    attn_product: mul
    attn_reweight: False
    edge_reweight: False
  mpnn:
    enable: True
    act: 'relu'
    dropout: 0.2
    edge_enhance: True
    project_edge: True
  residual: True
  layer_norm: False
  batch_norm: True
  act: 'relu'
  norm_e: True
  O_e: True
  ff_e: True
  update_e: True
  force_undirected: True
  pool: mean
  pool_edge: True
  pool_vn: False
  post_pool: False
  final_norm: True
  prefix_type: add_all
  label_embed_type: add_all
  num_task: 1
  task_type: classification
  # num_classes: only for classification
  node_encoder: True
  node_encoder_name: Atom+LapPe #AGAIN THIS MIGHT CHANGE TO ATOM ETC
  node_encoder_num_types: 9
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: Bond
  edge_encoder_num_types: 3 
  edge_encoder_bn: False
  add_virtual_node_edge: False
gt:
  layer_type: GritTransformer
  layers: 10
  n_heads: 8
  dim_hidden: 64  # `gt.dim_hidden` must match `gnn.dim_inner`
  dropout: 0.0
  layer_norm: False
  batch_norm: True
#  bn_momentum: 0.01
  update_e: True
  attn_dropout: 0.2
  attn:
    clamp: 5.
    act: 'relu'
    full_attn: True
    edge_enhance: True
    O_e: True
    norm_e: True
    fwl: False
gnn: # decoder --> san_graph = MLP + pooling
  head: san_graph
  layers_pre_mp: 0
  layers_post_mp: 3  # Not used when `gnn.head: san_graph`
  dim_inner: 64  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: True
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: False
optim:
  clip_grad_norm: True
  optimizer: adamW
  weight_decay: 1e-5
  base_lr: 1e-3
  max_epoch: 500
  num_warmup_epochs: 50
  scheduler: cosine_with_warmup
  min_lr: 1e-6
